"use strict";(self.webpackChunkscanmate=self.webpackChunkscanmate||[]).push([[526],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7934:(e,t,n)=>{n.r(t),n.d(t,{CenterContainer:()=>p,Table:()=>d,assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1,id:"Introduction",description:"\ud83d\ude81 Helicopter view of Our Graduation Project.",slug:"/"},i=void 0,l={unversionedId:"Introduction",id:"Introduction",title:"Introduction",description:"\ud83d\ude81 Helicopter view of Our Graduation Project.",source:"@site/docs/ScanMate.md",sourceDirName:".",slug:"/",permalink:"/",draft:!1,editUrl:"https://github.com/ZiadMansourM/photogrammetry/tree/main/docs/ScanMate.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"Introduction",description:"\ud83d\ude81 Helicopter view of Our Graduation Project.",slug:"/"},sidebar:"tutorialSidebar",next:{title:"Under The Hood",permalink:"/category/under-the-hood"}},s={},c=[{value:"\ud83d\udcdd Pipeline - docs - videos",id:"-pipeline---docs---videos",level:2},{value:"\ud83c\udfdb\ufe0f Datasets",id:"\ufe0f-datasets",level:2},{value:"\ud83e\uddd0 Production Folder Structure",id:"-production-folder-structure",level:2},{value:"\u2696\ufe0f License",id:"\ufe0f-license",level:2}],p=e=>{let{children:t}=e;return(0,a.kt)("div",{style:{textAlign:"center"}},t)},d=e=>{let{headers:t,rows:n}=e;return(0,a.kt)("div",{style:{display:"inline-block"}},(0,a.kt)("table",null,(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",{colSpan:3,style:{textAlign:"center"}},"Developed by four talented young men as their graduation project.")),(0,a.kt)("tr",null,t.map((e=>(0,a.kt)("th",{key:e},e)))),n.map(((e,t)=>(0,a.kt)("tr",{key:t},Array.isArray(e)?e.map(((e,t)=>(0,a.kt)("td",{key:t},e))):null))))))},u={toc:c,CenterContainer:p,Table:d},m="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(p,{mdxType:"CenterContainer"},(0,a.kt)("img",{src:"/img/ScanMate.png",alt:"ScanMate",width:"400"}),(0,a.kt)(d,{headers:["Name","Github","Twitter"],rows:[["Ziad Mansour",(0,a.kt)("a",{href:"https://github.com/ZiadMansourM"},"ZiadMansourM"),(0,a.kt)("a",{href:"https://twitter.com/Ziad_M_404"},"@ziad_m_404")],["Mohamed Wael","-","-"],["Maged Elosail","-","-"],["Yousif adel","-","-"]],mdxType:"Table"}),(0,a.kt)("p",null,"ScanMate: Implementation of Close Range Photogrammetry using Classical Image Processing Techniques")),(0,a.kt)("h2",{id:"-pipeline---docs---videos"},"\ud83d\udcdd Pipeline - ",(0,a.kt)("a",{parentName:"h2",href:"https://docs.scanmate.sreboy.com/"},"docs")," - ",(0,a.kt)("a",{parentName:"h2",href:"https://www.youtube.com/playlist?list=PLtRAgw3FCYeBXUeBIDOmbzzEEryIvtJo3"},"videos")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Console"},"*** We have the following 7 steps in our pipeline:\n$ prepare_images\n- Load Dataset Images\n- Compute Mask\n$ compute_sift_keypoints_descriptors\n$ image_matching\n$ data_feature_matching\n- Apply crossCheck BF Matcher\n- Apply Ransac on BF Matcher Output\n- Loop without repetition using Itertools\n$ compute_k_matrix\n$ generate_point_cloud\n- Recover Pose of reference camera\n- Recover rest camera poses using solvePNPRansac\n- Apply Triangulation\n$ 3D reconstruction\n- Use PointsCloud to generate a 3D Object (.stl) file\n")),(0,a.kt)("h2",{id:"\ufe0f-datasets"},"\ud83c\udfdb\ufe0f Datasets"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Status"),(0,a.kt)("th",{parentName:"tr",align:null},"Dataset Link"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u274c"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.capturingreality.com/free-datasets"},"Gingerbread Man")),(0,a.kt)("td",{parentName:"tr",align:null},"3D model of a gingerbread cookie. Created in RealityCapture from 158 images.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.capturingreality.com/free-datasets"},"Hammer")),(0,a.kt)("td",{parentName:"tr",align:null},"Hammer dataset with size of 750 MB.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.capturingreality.com/free-datasets"},"Small Cottage")),(0,a.kt)("td",{parentName:"tr",align:null},"Objects Scanned from all sides using Masks.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://sketchfab.com/3d-models/fountain-dataset-bdcf73513f404370a80cd3d8d0871fa8"},"Fountain")),(0,a.kt)("td",{parentName:"tr",align:null},"3D reconstruction images from the popular Strecha dataset.")))),(0,a.kt)("h2",{id:"-production-folder-structure"},"\ud83e\uddd0 Production Folder Structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"(venv) ziadh@Ziads-MacBook-Air production % tree \n.\n\u251c\u2500\u2500 conf\n\u2502\xa0\xa0 \u251c\u2500\u2500 certs\n\u2502\xa0\xa0 \u251c\u2500\u2500 html\n\u2502\xa0\xa0 \u251c\u2500\u2500 kong-config\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 kong.yaml\n\u2502\xa0\xa0 \u251c\u2500\u2500 logs\n\u2502\xa0\xa0 \u2514\u2500\u2500 nginx.conf\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 main.py\n    \u251c\u2500\u2500 scanmate.py\n    \u2514\u2500\u2500 under_the_hood\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 compute_sift_features.py\n        \u251c\u2500\u2500 data_feature_match.py\n        \u251c\u2500\u2500 data_structures\n        \u2502\xa0\xa0 \u251c\u2500\u2500 __init__.py\n        \u2502\xa0\xa0 \u251c\u2500\u2500 feature_matches.py\n        \u2502\xa0\xa0 \u251c\u2500\u2500 image.py\n        \u2502\xa0\xa0 \u2514\u2500\u2500 images.py\n        \u251c\u2500\u2500 generate_points_cloud.py\n        \u251c\u2500\u2500 image_match.py\n        \u251c\u2500\u2500 prepare_images.py\n        \u2514\u2500\u2500 utils\n            \u251c\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 utils.py\n\n10 directories, 18 files\n")),(0,a.kt)("h2",{id:"\ufe0f-license"},"\u2696\ufe0f License"),(0,a.kt)("p",null,"This project is licensed under the terms of the GNU General Public License version 3.0 (GPLv3). See the LICENSE file for details."))}f.isMDXComponent=!0}}]);